(function($, APP) {
    'use strict';

    // youtube or vimeo
    function checkPlayerName(url) {
        if (url === 'false') return false;

        var result = url.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(&\S+)?/);

        if (result && /youtube/g.test(result[3])) {
            return 'youtube';
        } else if (result && /vimeo/g.test(result[3])) {
            return 'vimeo';
        }

        return false;
    }

    // youtube or vimeo
    function getVideoId(url) {
        if (url === 'false') return false;

        var result = url.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(&\S+)?/);

        return result ? result[6] : false;
    }

    function getYTPreviewUrl(videoId, quality) {
        return 'https://img.youtube.com/vi/' + videoId + '/' +
            (quality || '') + 'default.jpg';
    }

    function getVimeoPreviewUrl(vimeoId, callback) {
        var request = new XMLHttpRequest();
        request.open('GET', 'https://vimeo.com/api/v2/video/' + vimeoId + '.json', true);
        request.onreadystatechange = function() {
            if (this.readyState === 4) {
                if (this.status >= 200 && this.status < 400) {
                    var response = JSON.parse(this.responseText);

                    callback(response[0].thumbnail_large);
                }
            }
        };
        request.send();
        request = null;
    }

    var getYTPreviewUrlWithBestQuality = (function() {
        var cache = {};

        return function(id) {
            var def = $.Deferred();
            if (id in cache) {
                if (cache[id]) {
                    def.resolve(cache[id]);
                } else {
                    def.reject('Preview image not found.');
                }
            } else {
                $('<img>').on('load', function() {
                    if (120 === (this.naturalWidth || this.width)) {
                        // selection of preview in the best quality
                        var file = this.src.split('/').pop();
                        switch (file) {
                            case 'maxresdefault.jpg':
                                this.src = this.src.replace(file, 'sddefault.jpg');
                                break;
                            case 'sddefault.jpg':
                                this.src = this.src.replace(file, 'hqdefault.jpg');
                                break;
                            case 'hqdefault.jpg':
                                this.src = this.src.replace(file, 'default.jpg');
                                break;
                            default:
                                cache[id] = null;
                                def.reject('Preview image not found.');
                                break;
                        }
                    } else {
                        def.resolve(cache[id] = this.src);
                    }
                }).attr('src', getYTPreviewUrl(id, 'maxres'));
            }

            return def;
        };
    })();

    APP.regExtension({
        name: 'core-slider-mobirise',
        global: {
            setSliders: function(component) {
                var $slider = $('[data-app-component-id=' + component._id + '] > .app-component-content section[mbr-slider]');
                if(APP.isSecondaryComponent(component._id)){
                    $slider = $('[data-app-component-id=' + component._id + '] > .app-component-content section [mbr-carousel]');
                    var carouselName = $slider.attr('mbr-carousel');
                }
                if ($slider.length) {
                    $(component._params[carouselName]).each(function(index){
                        if(this.playVideo){
                            var curItem = $slider.find('.carousel-item').eq(index);
                            curItem.find('.image_wrapper img').css('opacity', '0');
                            curItem.find('.image_wrapper .mbr-overlay').css('display', 'none');
                            curItem.find('.mbr-background-video-preview').remove();
                        }
                    });
                    $slider.find('.carousel-item[data-bg-video-slide]').each(function(i, el) {
                        var videoUrl = $(el).attr('data-bg-video-slide');
                        var videoId = getVideoId(videoUrl);

                        if (!videoId) {
                            return;
                        }

                        var playerName = checkPlayerName(videoUrl);

                        var $preview = $('<div class="mbr-background-video-preview"></div>').css({
                            display: 'none',
                            backgroundSize: 'cover',
                            backgroundPosition: 'center'
                        });

                        if(!APP.isSecondaryComponent(component._id)){
                            $('.mbr-overlay, .container-slide', el).before($preview);
                        } else {
                            $('.container-slide', el).before($preview);
                        }

                        if (playerName === 'youtube') {
                            getYTPreviewUrlWithBestQuality(videoId).done(function(url) {
                                $(el).find('.mbr-background-video-preview').css('background-image', 'url(' + url + ')').show();
                            });
                        } else {
                            getVimeoPreviewUrl(videoId, function(url) {
                                $(el).find('.mbr-background-video-preview').css('background-image', 'url(' + url + ')').show();
                            });
                        }
                    });
                }
            },
            publishSliders: function(component, context) {
                if(APP.isSecondaryComponent(component._id)){
                    var $slider = $(context).find('[data-app-component-id=' + component._id + '] > .app-component-content section [mbr-carousel]');
                    var carouselName = $slider.attr('mbr-carousel');
                    $(component._params[carouselName]).each(function(e){
                        if(this.playVideo){
                            $slider.find('.carousel-item').eq(e).find('.image_wrapper img').css('opacity', '0');
                            $slider.find('.carousel-item').eq(e).find('.image_wrapper .mbr-overlay').remove();
                        }
                    })
                }
                if ($('[data-app-component-id=' + component._id + '] > .app-component-content [mbr-slider]').length) {
                    component._plugins = (function(dependencies, playVideo, plugins) {
                        return plugins
                            .split(',').filter(function(item) {
                                return dependencies.indexOf(item) < 0;
                            })
                            .concat(playVideo ? dependencies : []).join(',');
                    })(['YTPlayer', 'VimeoPlayer', 'SliderVideo'], !!$(context).find('[data-bg-video-slide^="http"]').length, component._plugins);

                    // add autoplay
                    $(context).find('[data-app-component-id=' + component._id + '] > .app-component-content section[mbr-slider][data-interval]')
                        .attr('data-interval', component._params.autoplay ? component._params.timeout * 1000 : 'false');

                    // set active first slide
                    ['.carousel-indicators > li', '.carousel-inner > div'].forEach(function(selector) {
                        context.find('[data-app-component-id=' + component._id + '] > .app-component-content section[mbr-slider]')
                            .find(selector).removeClass('active').eq(0).addClass('active');
                    });
                }
            }
        },
        events: {
            loadedComponent: function(component, page, context, publish) {
                var $carousel = mbrAppCore.$template.find('.carousel');
                if($carousel.length){
                    $carousel.carousel('pause');
                }
                if (publish) {
                    this.publishSliders(component, context);
                } else {
                    this.setSliders(component);
                }
            }
        }
    });
}(jQuery, mbrAppCore));

//# sourceMappingURL=core-slider-mobirise.js.map
